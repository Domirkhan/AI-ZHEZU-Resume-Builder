import { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./CreateResume.css";

function CreateResume({ userData, setUserData, setAiRecommendations }) {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState(
    userData || {
      fullName: "",
      position: "",
      education: "",
      experience: "",
      skills: "",
      achievements: "",
      phone: "",
      email: "",
      location: "",
    }
  );

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const generateMockRecommendations = (data) => {
    return {
      resumeImprovements: [
        '–î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—É–≤–µ–ª–∏—á–∏–ª –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ 30%")',
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã",
        "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –æ—Ç –±–æ–ª–µ–µ –≤–∞–∂–Ω–æ–≥–æ –∫ –º–µ–Ω–µ–µ –≤–∞–∂–Ω–æ–º—É",
        "–î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
      ],
      skillsDevelopment: [
        "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑—É—á–∏—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
        "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ soft skills: –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —Ä–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ",
        "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤",
        "–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö",
      ],
      careerRecommendations: [
        data.position || "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤",
        "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫",
        "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞",
        "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç",
      ],
      summary: `–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –æ–ø—ã—Ç–∞ –∏ –Ω–∞–≤—ã–∫–æ–≤, –≤—ã –∏–º–µ–µ—Ç–µ —Å–∏–ª—å–Ω—É—é –±–∞–∑—É –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ ${
        data.position || "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞"
      }. –í–∞—à–∏ –Ω–∞–≤—ã–∫–∏ —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏.`,
    };
  };

  const validateField = (name, value) => {
    if (!value) return false;

    switch (name) {
      case "email":
        return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value);
      case "phone":
        return /^[\d\s+()-]+$/.test(value);
      case "fullName":
        return value.length >= 5;
      case "position":
        return value.length >= 3;
      case "education":
      case "experience":
      case "skills":
        return value.length >= 10;
      default:
        return true;
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);

    try {
      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
      const requiredFields = [
        "fullName",
        "position",
        "education",
        "experience",
        "skills",
        "email",
        "phone",
      ];
      const invalidFields = requiredFields.filter(
        (field) => !validateField(field, formData[field])
      );

      if (invalidFields.length > 0) {
        const fieldMessages = {
          email: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email",
          phone: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
          fullName: "–§–ò–û –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤",
          position: "–î–æ–ª–∂–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤",
          education: "–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
          experience: "–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–ø—ã—Ç–∞",
          skills: "–£–∫–∞–∂–∏—Ç–µ –±–æ–ª—å—à–µ –Ω–∞–≤—ã–∫–æ–≤",
        };

        const errorMessages = invalidFields.map(
          (field) => fieldMessages[field]
        );
        alert(
          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –æ—à–∏–±–∫–∏:\n\n" +
            errorMessages.join("\n")
        );
        setLoading(false);
        return;
      }

      console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", formData);

      const apiUrl = `/api/analyze`;
      const resp = await fetch(apiUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
          "Cache-Control": "no-cache",
        },
        body: JSON.stringify(formData),
        credentials: "include",
      });

      if (!resp.ok) {
        throw new Error(`HTTP error! status: ${resp.status}`);
      }

      const result = await resp.json();

      if (result.error) {
        throw new Error(result.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö");
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
      if (!result.data?.improvedData) {
        throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞");
      }

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      setAiRecommendations({
        resumeImprovements: result.data.recommendations || [],
        skillsDevelopment: result.data.skillsDevelopment || [
          "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑—É—á–∏—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ –≤–∞—à–µ–π –æ–±–ª–∞—Å—Ç–∏",
          "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–º–∞–Ω–¥–µ",
          "–û—Å–≤–∞–∏–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏",
          "–ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã",
        ], // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑ –æ—Ç–≤–µ—Ç–∞ AI, –µ—Å–ª–∏ –µ—Å—Ç—å
        careerRecommendations: result.data.careerPaths || [],
        summary: result.data.improvedData.summary || "",
        data: result.data, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —É–ª—É—á—à–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      setUserData({
        ...formData,
        ...result.data.improvedData,
      });

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —à–∞–±–ª–æ–Ω–∞
      navigate("/templates");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—é–º–µ:", error);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      alert(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∑—é–º–µ. " +
          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
      );

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      setAiRecommendations({
        resumeImprovements: [
          "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç AI. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        ],
        skillsDevelopment: [],
        careerRecommendations: [formData.position || "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"],
        summary: "–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.",
        data: {
          improvedData: formData, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        },
      });

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      setUserData(formData);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="create-resume-page">
      <div className="create-content">
        <button className="back-button" onClick={() => navigate("/")}>
          <svg
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M19 12H5m0 0l7 7m-7-7l7-7"
              stroke="currentColor"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
          –ù–∞–∑–∞–¥
        </button>

        <div className="glass-card form-card">
          <div className="form-header">
            <h1>–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—é–º–µ</h1>
            <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ AI</p>
          </div>

          <form onSubmit={handleSubmit} className="resume-form">
            <div className="form-section">
              <h2>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>

              <div className="form-group">
                <label htmlFor="fullName">–§–ò–û *</label>
                <input
                  type="text"
                  id="fullName"
                  name="fullName"
                  value={formData.fullName}
                  onChange={handleChange}
                  required
                  placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                />
              </div>

              <div className="form-group">
                <label htmlFor="position">–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å *</label>
                <input
                  type="text"
                  id="position"
                  name="position"
                  value={formData.position}
                  onChange={handleChange}
                  required
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Senior Frontend Developer"
                />
              </div>

              <div className="form-row">
                <div className="form-group">
                  <label htmlFor="email">Email *</label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                    required
                    placeholder="ivan@example.com"
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    required
                    placeholder="+7 (999) 123-45-67"
                  />
                </div>
              </div>

              <div className="form-group">
                <label htmlFor="location">–ì–æ—Ä–æ–¥</label>
                <input
                  type="text"
                  id="location"
                  name="location"
                  value={formData.location}
                  onChange={handleChange}
                  placeholder="–ú–æ—Å–∫–≤–∞"
                />
              </div>
            </div>

            <div className="form-section">
              <h2>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</h2>

              <div className="form-group">
                <label htmlFor="education">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ *</label>
                <textarea
                  id="education"
                  name="education"
                  value={formData.education}
                  onChange={handleChange}
                  required
                  rows="4"
                  placeholder="–£–∫–∞–∂–∏—Ç–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –≥–æ–¥—ã –æ–±—É—á–µ–Ω–∏—è&#10;–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–ì–£, –§–∞–∫—É–ª—å—Ç–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –Ω–∞—É–∫, 2015-2019"
                />
              </div>
            </div>

            <div className="form-section">
              <h2>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</h2>

              <div className="form-group">
                <label htmlFor="experience">–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã *</label>
                <textarea
                  id="experience"
                  name="experience"
                  value={formData.experience}
                  onChange={handleChange}
                  required
                  rows="6"
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: –∫–æ–º–ø–∞–Ω–∏—è, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –ø–µ—Ä–∏–æ–¥, –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏&#10;–ù–∞–ø—Ä–∏–º–µ—Ä: Google, Senior Developer, 2020-2023&#10;- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π&#10;- –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥–æ–π –∏–∑ 5 —á–µ–ª–æ–≤–µ–∫"
                />
              </div>
            </div>

            <div className="form-section">
              <h2>–ù–∞–≤—ã–∫–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>

              <div className="form-group">
                <label htmlFor="skills">–ù–∞–≤—ã–∫–∏ *</label>
                <textarea
                  id="skills"
                  name="skills"
                  value={formData.skills}
                  onChange={handleChange}
                  required
                  rows="4"
                  placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–∞—à–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é&#10;–ù–∞–ø—Ä–∏–º–µ—Ä: JavaScript, React, Node.js, Python, SQL"
                />
              </div>

              <div className="form-group">
                <label htmlFor="achievements">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</label>
                <textarea
                  id="achievements"
                  name="achievements"
                  value={formData.achievements}
                  onChange={handleChange}
                  rows="4"
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –Ω–∞–≥—Ä–∞–¥—ã&#10;–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–æ–±–µ–¥–∏—Ç–µ–ª—å —Ö–∞–∫–∞—Ç–æ–Ω–∞ 2022, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç AWS Solutions Architect"
                />
              </div>
            </div>

            <button type="submit" className="submit-button" disabled={loading}>
              {loading ? (
                <>
                  <div className="spinner"></div>
                  <span>–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö...</span>
                </>
              ) : (
                <>
                  <span>–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å AI</span>
                  <svg
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M13 7l5 5m0 0l-5 5m5-5H6"
                      stroke="currentColor"
                      strokeWidth="2"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                </>
              )}
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}

export default CreateResume;
