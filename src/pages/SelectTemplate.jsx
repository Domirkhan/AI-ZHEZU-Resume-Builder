import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './SelectTemplate.css';

function SelectTemplate({ userData, aiRecommendations, setSelectedTemplate }) {
  const navigate = useNavigate();
  const [selectedId, setSelectedId] = useState(null);

  if (!userData || !aiRecommendations?.data) {
    navigate('/create');
    return null;
  }

  const templates = [
    {
      id: 'modern',
      name: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π',
      description: '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è IT –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π',
      icon: 'üíª',
      color: '#4F46E5'
    },
    {
      id: 'professional',
      name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π',
      description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π',
      icon: 'üíº',
      color: '#0891B2'
    },
    {
      id: 'creative',
      name: '–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π',
      description: '–Ø—Ä–∫–∏–π –¥–∏–∑–∞–π–Ω –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –∏ –¥–∏–∑–∞–π–Ω–∞',
      icon: 'üé®',
      color: '#EC4899'
    },
    {
      id: 'minimal',
      name: '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π',
      description: '–ü—Ä–æ—Å—Ç–æ–π –∏ —á–∏—Å—Ç—ã–π –¥–∏–∑–∞–π–Ω',
      icon: 'üìÑ',
      color: '#10B981'
    }
  ];

  const handleSelectTemplate = (template) => {
    setSelectedId(template.id);
    setSelectedTemplate(template);
  };

  const handleContinue = () => {
    if (selectedId) {
      navigate('/preview');
    }
  };

  return (
    <div className="select-template-page">
      <div className="select-content">
        <button className="back-button" onClick={() => navigate('/create')}>
          <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19 12H5m0 0l7 7m-7-7l7-7" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
          –ù–∞–∑–∞–¥
        </button>

        <div className="glass-card recommendations-card">
          <div className="recommendations-header">
            <h2>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ AI</h2>
          </div>

          <div className="recommendations-grid">
            <div className="recommendation-section">
              <h3>–£–ª—É—á—à–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ</h3>
              <ul>
                {aiRecommendations.resumeImprovements.map((item, index) => (
                  <li key={index}>{item}</li>
                ))}
              </ul>
            </div>

            <div className="recommendation-section">
              <h3>–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤</h3>
              <ul>
                {aiRecommendations.skillsDevelopment.map((item, index) => (
                  <li key={index}>{item}</li>
                ))}
              </ul>
            </div>

            <div className="recommendation-section full-width">
              <h3>–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏</h3>
              <div className="career-tags">
                {aiRecommendations.careerRecommendations.map((career, index) => (
                  <span key={index} className="career-tag">{career}</span>
                ))}
              </div>
            </div>
          </div>

          <div className="ai-summary">
            <div className="summary-icon">
              <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              </svg>
            </div>
            <p>{aiRecommendations.summary}</p>
          </div>
        </div>

        <div className="glass-card templates-card">
          <div className="templates-header">
            <h1>–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω —Ä–µ–∑—é–º–µ</h1>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∑–∞–π–Ω, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∞—à–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏</p>
          </div>

          <div className="templates-grid">
            {templates.map((template) => (
              <div
                key={template.id}
                className={`template-card ${selectedId === template.id ? 'selected' : ''}`}
                onClick={() => handleSelectTemplate(template)}
              >
                <div className="template-icon" style={{ backgroundColor: template.color }}>
                  <span>{template.icon}</span>
                </div>
                <h3>{template.name}</h3>
                <p>{template.description}</p>
                {selectedId === template.id && (
                  <div className="selected-badge">
                    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M5 13l4 4L19 7" stroke="currentColor" strokeWidth="3" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                  </div>
                )}
              </div>
            ))}
          </div>

          <button
            className="continue-button"
            onClick={handleContinue}
            disabled={!selectedId}
          >
            <span>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</span>
            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M13 7l5 5m0 0l-5 5m5-5H6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </button>
        </div>
      </div>
    </div>
  );
}

export default SelectTemplate;
