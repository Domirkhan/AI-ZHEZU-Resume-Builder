import express from "express";
import cors from "cors";
import bodyParser from "body-parser";
import fetch from "node-fetch";
import dotenv from "dotenv";
import cors from 'cors';
dotenv.config();

const app = express();
app.use(cors({ origin: 'http://aizhezu-resume-builder.vercel.app'}));
app.use(bodyParser.json());

const PORT = process.env.PORT || 4000;
const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY;

if (!OPENROUTER_API_KEY) {
  console.error("‚ùå –û—à–∏–±–∫–∞: OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env");
  process.exit(1);
}

app.post("/api/analyze", async (req, res) => {
  try {
    const data = req.body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!data || !data.fullName || !data.position || !data.education || !data.experience || !data.skills) {
      return res.status(400).json({ 
        error: true, 
        message: "–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã"
      });
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∑—é–º–µ
    const prompt = `
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π HR —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ —É–ª—É—á—à–∏ —Å–ª–µ–¥—É—é—â–µ–µ —Ä–µ–∑—é–º–µ, —Å–¥–µ–ª–∞–≤ –µ–≥–æ –±–æ–ª–µ–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π.

–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:
–§–ò–û: ${data.fullName}
–ü–æ–∑–∏—Ü–∏—è: ${data.position}
–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: ${data.education}
–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: ${data.experience}
–ù–∞–≤—ã–∫–∏: ${data.skills}
${data.achievements ? `–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: ${data.achievements}` : ''}

–ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–π —Ä–µ–∑—é–º–µ, —á—Ç–æ–±—ã –æ–Ω–æ –±—ã–ª–æ –±–æ–ª–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º.
1. –£–ª—É—á—à–∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã
2. –î–æ–±–∞–≤—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
3. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –Ω–∞–≤—ã–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
4. –°–æ–∑–¥–∞–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ "–û —Å–µ–±–µ"
5. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å
6. –ü–∏—à–∏ –≤—Å–µ–≥–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ

–í–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{
  "improvedData": {
    "fullName": "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è",
    "position": "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –∏–ª–∏ —É–ª—É—á—à–µ–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è",
    "summary": "–∫—Ä–∞—Ç–∫–æ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
    "education": "—É–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
    "experience": "—É–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–ø—ã—Ç–∞",
    "skills": "—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏",
    "achievements": "—É–ª—É—á—à–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
    "contacts": {
      "email": "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π email",
      "phone": "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω",
      "location": "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥"
    }
  },
  "recommendations": [
    "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 1",
    "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 2",
    "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 3"
  ],
  "careerPaths": [
    "–∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å 1",
    "–∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å 2"
  ]
}`;

    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${OPENROUTER_API_KEY}`,
        "Content-Type": "application/json",
        "HTTP-Referer": "http://localhost:3000",
        "X-Title": "Resume Improver"
      },
      body: JSON.stringify({
        model: "anthropic/claude-3-haiku",
        messages: [{ 
          role: "user", 
          content: prompt 
        }],
        temperature: 0.7,
        max_tokens: 2000
      })
    });

    if (!response.ok) {
      throw new Error(`API Error: ${response.status} ${response.statusText}`);
    }

    const result = await response.json();
    
    if (!result.choices?.[0]?.message?.content) {
      throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API");
    }

    try {
      // –ü–∞—Ä—Å–∏–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º JSON –æ—Ç–≤–µ—Ç
      const improvedResume = JSON.parse(result.choices[0].message.content);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π
      if (!improvedResume.improvedData || !improvedResume.recommendations || !improvedResume.careerPaths) {
        throw new Error("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ –æ—Ç–≤–µ—Ç–µ");
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
      if (!improvedResume.improvedData.contacts) {
        improvedResume.improvedData.contacts = {
          email: data.email,
          phone: data.phone,
          location: data.location
        };
      }

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ
      res.json({
  success: true,
  data: {
    improvedData: improvedResume.improvedData,
    recommendations: improvedResume.recommendations,
    skillsDevelopment: improvedResume.skillsDevelopment || [
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑—É—á–∏—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ –≤–∞—à–µ–π –æ–±–ª–∞—Å—Ç–∏",
      "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–º–∞–Ω–¥–µ",
      "–û—Å–≤–∞–∏–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏",
      "–ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    ],
    careerPaths: improvedResume.careerPaths
  }
});

    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞:", error);
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–µ—Ç–∫–æ–π –æ–± –æ—à–∏–±–∫–µ
      res.json({
        error: true,
        message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ —Ä–µ–∑—é–º–µ",
        originalData: data
      });
    }

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", error);
    res.status(500).json({
      error: true,
      message: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
      details: error.message
    });
  }
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
app.get("/health", (req, res) => {
  res.json({ status: "ok", timestamp: new Date().toISOString() });
});

app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üìù API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
});